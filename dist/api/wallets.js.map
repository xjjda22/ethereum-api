{"version":3,"sources":["../../src/api/wallets.js"],"names":["wallets","config","db","id","load","req","callback","wallet","find","err","index","res","params","json","create","body","length","toString","push","read","update","key","sendStatus","delete","splice","indexOf"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,UAAU,EAAhB;;kBAEe;AAAA,KAAGC,MAAH,QAAGA,MAAH;AAAA,KAAWC,EAAX,QAAWA,EAAX;AAAA,QAAoB,wCAAS;;AAE3C;AACAC,MAAK,SAHsC;;AAK3C;;;AAGAC,MAR2C,gBAQtCC,GARsC,EAQjCF,EARiC,EAQ7BG,QAR6B,EAQnB;AACvB,OAAIC,SAASP,QAAQQ,IAAR,CAAc;AAAA,WAAUD,OAAOJ,EAAP,KAAYA,EAAtB;AAAA,IAAd,CAAb;AAAA,OACCM,MAAMF,SAAS,IAAT,GAAgB,WADvB;AAEAD,YAASG,GAAT,EAAcF,MAAd;AACA,GAZ0C;;;AAc3C;AACAG,OAf2C,wBAezBC,GAfyB,EAepB;AAAA,OAAfC,MAAe,SAAfA,MAAe;;AACtB;AACAD,OAAIE,IAAJ,CAASb,OAAT;AACA,GAlB0C;;;AAoB3C;AACAc,QArB2C,yBAqB1BH,GArB0B,EAqBrB;AAAA,OAAbI,IAAa,SAAbA,IAAa;;AACrBA,QAAKZ,EAAL,GAAUH,QAAQgB,MAAR,CAAeC,QAAf,CAAwB,EAAxB,CAAV;AACAjB,WAAQkB,IAAR,CAAaH,IAAb;AACAJ,OAAIE,IAAJ,CAASE,IAAT;AACA,GAzB0C;;;AA2B3C;AACAI,MA5B2C,uBA4B1BR,GA5B0B,EA4BrB;AAAA,OAAfJ,MAAe,SAAfA,MAAe;;AACrBI,OAAIE,IAAJ,CAASN,MAAT;AACA,GA9B0C;;;AAgC3C;AACAa,QAjC2C,yBAiClBT,GAjCkB,EAiCb;AAAA,OAArBJ,MAAqB,SAArBA,MAAqB;AAAA,OAAbQ,IAAa,SAAbA,IAAa;;AAC7B;AACA,QAAK,IAAIM,GAAT,IAAgBN,IAAhB,EAAsB;AACrB,QAAIM,QAAM,IAAV,EAAgB;AACfd,YAAOc,GAAP,IAAcN,KAAKM,GAAL,CAAd;AACA;AACD;AACDV,OAAIW,UAAJ,CAAe,GAAf;AACA,GAzC0C;;;AA2C3C;AACAC,QA5C2C,0BA4CxBZ,GA5CwB,EA4CnB;AAAA,OAAfJ,MAAe,SAAfA,MAAe;;AACvBP,WAAQwB,MAAR,CAAexB,QAAQyB,OAAR,CAAgBlB,MAAhB,CAAf,EAAwC,CAAxC;AACAI,OAAIW,UAAJ,CAAe,GAAf;AACA;AA/C0C,EAAT,CAApB;AAAA,C","file":"wallets.js","sourcesContent":["import resource from 'resource-router-middleware';\n\nconst wallets = [];\n\nexport default ({ config, db }) => resource({\n\n\t/** Property name to store preloaded entity on `request`. */\n\tid : 'wallets',\n\n\t/** For requests with an `id`, you can auto-load the entity.\n\t *  Errors terminate the request, success sets `req[id] = data`.\n\t */\n\tload(req, id, callback) {\n\t\tlet wallet = wallets.find( wallet => wallet.id===id ),\n\t\t\terr = wallet ? null : 'Not found';\n\t\tcallback(err, wallet);\n\t},\n\n\t/** GET / - List all entities */\n\tindex({ params }, res) {\n\t\t//console.log(arguments)\n\t\tres.json(wallets);\n\t},\n\n\t/** POST / - Create a new entity */\n\tcreate({ body }, res) {\n\t\tbody.id = wallets.length.toString(36);\n\t\twallets.push(body);\n\t\tres.json(body);\n\t},\n\n\t/** GET /:id - Return a given entity */\n\tread({ wallet }, res) {\n\t\tres.json(wallet);\n\t},\n\n\t/** PUT /:id - Update a given entity */\n\tupdate({ wallet, body }, res) {\n\t\t//console.log(arguments);\n\t\tfor (let key in body) {\n\t\t\tif (key!=='id') {\n\t\t\t\twallet[key] = body[key];\n\t\t\t}\n\t\t}\n\t\tres.sendStatus(204);\n\t},\n\n\t/** DELETE /:id - Delete a given entity */\n\tdelete({ wallet }, res) {\n\t\twallets.splice(wallets.indexOf(wallet), 1);\n\t\tres.sendStatus(204);\n\t}\n});\n"]}